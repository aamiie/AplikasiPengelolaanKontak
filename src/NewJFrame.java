/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author USER
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
        start(); // Memanggil metode start() untuk mengatur listener dan memuat data kontak
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        buttonEkspor = new javax.swing.JButton();
        buttonImpor = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        textFieldCari = new javax.swing.JTextField();
        buttonCari = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        textFieldNama = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textFieldNomor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBoxKategori = new javax.swing.JComboBox<>();
        buttonTambah = new javax.swing.JButton();
        buttonUbah = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableKontak = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Pengelolaan Kontak");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 153, 153));

        buttonEkspor.setBackground(new java.awt.Color(255, 0, 204));
        buttonEkspor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonEkspor.setText("Ekspor ke File");

        buttonImpor.setBackground(new java.awt.Color(255, 0, 204));
        buttonImpor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonImpor.setText("Impor dari File");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Cari Kontak");

        textFieldCari.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        buttonCari.setBackground(new java.awt.Color(255, 0, 204));
        buttonCari.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonCari.setText("Cari");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("PENCARIAN & FILTER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(textFieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonCari)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(buttonEkspor, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonImpor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel7)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonCari))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonEkspor)
                    .addComponent(buttonImpor))
                .addGap(26, 26, 26))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("APLIKASI PENGELOLA KONTAK ");

        jPanel3.setBackground(new java.awt.Color(255, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Nama");

        textFieldNama.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textFieldNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNamaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("No. Telp");

        textFieldNomor.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        textFieldNomor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textFieldNomorKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("INPUT DATA KONTAK");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Kategori");

        comboBoxKategori.setBackground(new java.awt.Color(255, 0, 204));
        comboBoxKategori.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comboBoxKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Keluarga", "Teman", "Kerja" }));

        buttonTambah.setBackground(new java.awt.Color(255, 0, 204));
        buttonTambah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonTambah.setText("Tambah");

        buttonUbah.setBackground(new java.awt.Color(255, 0, 204));
        buttonUbah.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonUbah.setText("Ubah");

        buttonHapus.setBackground(new java.awt.Color(255, 51, 204));
        buttonHapus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        buttonHapus.setText("Hapus");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(buttonTambah)
                                .addGap(18, 18, 18)
                                .addComponent(buttonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(textFieldNomor))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(comboBoxKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(textFieldNama))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(jLabel6)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(textFieldNomor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonTambah)
                    .addComponent(buttonUbah)
                    .addComponent(buttonHapus))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        btnKeluar.setBackground(new java.awt.Color(255, 0, 0));
        btnKeluar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnKeluar.setText("EXIT ");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 153, 153));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("TABEL DAFTAR KONTAK ");

        tableKontak.setBackground(new java.awt.Color(255, 153, 204));
        tableKontak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Nomor", "Kategori"
            }
        ));
        jScrollPane1.setViewportView(tableKontak);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(261, 261, 261))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(188, 188, 188)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(126, 126, 126)
                                .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldNomorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldNomorKeyTyped
        char c = evt.getKeyChar();
        // Memastikan karakter yang dimasukkan adalah digit atau tombol backspace
        if (!Character.isDigit(c) && c != java.awt.event.KeyEvent.VK_BACK_SPACE) {
            evt.consume(); // Mengabaikan input jika tidak valid
            // Menampilkan pesan kesalahan jika input bukan angka
            JOptionPane.showMessageDialog(this, "Hanya bisa memasukkan angka!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_textFieldNomorKeyTyped

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
// Tambahkan konfirmasi sebelum keluar
    int dialogResult = JOptionPane.showConfirmDialog(
        this, 
        "Apakah Anda yakin ingin keluar dari aplikasi?", 
        "Konfirmasi Keluar", 
        JOptionPane.YES_NO_OPTION
    );

    if (dialogResult == JOptionPane.YES_OPTION) {
        // Menutup seluruh aplikasi Java
        System.exit(0); 
    }        // TODO add your handling code here:
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void textFieldNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNamaActionPerformed

    private void muatKontak() {
        DefaultTableModel tableModel = (DefaultTableModel) tableKontak.getModel();
        tableModel.setRowCount(0); // Mengosongkan tabel sebelum memuat data baru
        try (ResultSet rs = Contact.getKontak()) {
            // Menambahkan setiap baris data kontak ke model tabel
            while (rs != null && rs.next()) {
                tableModel.addRow(new Object[]{
                        rs.getInt("id"),
                        rs.getString("nama"),
                        rs.getString("nomor"),
                        rs.getString("kategori")
                });
            }
        } catch (SQLException e) {
            e.printStackTrace(); // Menangani exception SQL
        }
    }
    
    private class tambahKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String nama = textFieldNama.getText(); // Mengambil nama dari field
            String nomor = textFieldNomor.getText(); // Mengambil nomor dari field
            String kategori = comboBoxKategori.getSelectedItem().toString(); // Mengambil kategori terpilih
            // Memvalidasi nomor telepon sebelum menyimpan
            if (validasiNomor(nomor)) {
                if (!textFieldNama.getText().isEmpty()) {
                    // Menambah kontak baru ke database
                    Contact.tambahKontak(new Contact(nama, nomor, kategori));
                    muatKontak(); // Memuat ulang data kontak
                    bersihkanField(); // Membersihkan field input
                } else {
                    // Menampilkan pesan kesalahan jika nama kosong
                    JOptionPane.showMessageDialog(null, "Nama tidak boleh kosong!");
                }
            } else {
                // Menampilkan pesan kesalahan jika nomor tidak valid
                JOptionPane.showMessageDialog(null, "Invalid phone number!");
            }
        }
    }

    private class ubahKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            DefaultTableModel tableModel = (DefaultTableModel) tableKontak.getModel();
            int barisAktif = tableKontak.getSelectedRow(); // Mengambil baris yang dipilih
            if (barisAktif >= 0) {
                String id = tableModel.getValueAt(barisAktif, 0).toString(); // Mengambil ID kontak
                String nama = textFieldNama.getText();
                String nomor = textFieldNomor.getText();
                String kategori = comboBoxKategori.getSelectedItem().toString();
                // Memvalidasi nomor sebelum mengubah
                if (validasiNomor(nomor)) {
                    // Mengubah data kontak di database
                    Contact.ubahKontak(Integer.parseInt(id), new Contact(nama, nomor, kategori));
                    muatKontak(); // Memuat ulang data kontak
                    bersihkanField(); // Membersihkan field input
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid phone number!");
                }
            }
        }
    }

    private class hapusKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            DefaultTableModel tableModel = (DefaultTableModel) tableKontak.getModel();
            int barisAktif = tableKontak.getSelectedRow(); // Mengambil baris yang dipilih
            if (barisAktif >= 0) {
                String id = tableModel.getValueAt(barisAktif, 0).toString(); // Mengambil ID kontak
                // Menghapus kontak dari database
                Contact.hapusKontak(Integer.parseInt(id));
                muatKontak(); // Memuat ulang data kontak
                bersihkanField(); // Membersihkan field input
            }
        }
    }

    private class cariKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            DefaultTableModel tableModel = (DefaultTableModel) tableKontak.getModel();
            String query = textFieldCari.getText(); // Mengambil query pencarian
            tableModel.setRowCount(0); // Mengosongkan tabel sebelum menampilkan hasil pencarian
            try (ResultSet rs = Contact.cariKontak(query)) {
                // Menambahkan hasil pencarian ke tabel
                while (rs != null && rs.next()) {
                    tableModel.addRow(new Object[]{
                            rs.getInt("id"),
                            rs.getString("nama"),
                            rs.getString("nomor"),
                            rs.getString("kategori")
                    });
                }
            } catch (SQLException ex) {
                ex.printStackTrace(); // Menangani exception SQL
            }
        }
    }
  
    private class eksporKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            Contact.eksporKeCSV(); // Menggunakan metode untuk mengekspor data
        }
    }

    private class imporKontakListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            Contact.imporDariCSV(); // Menggunakan metode untuk mengimpor data
            muatKontak(); // Memuat ulang data kontak setelah impor
        }
    }

    private void bersihkanField() {
        textFieldNama.setText(""); // Mengosongkan field nama
        textFieldNomor.setText(""); // Mengosongkan field nomor
        comboBoxKategori.setSelectedIndex(0); // Mengatur kategori ke default
        tableKontak.clearSelection(); // Menghapus pemilihan di tabel
    }

    private boolean validasiNomor(String nomor) {
        return nomor.matches("\\d{10,15}"); // Memastikan nomor terdiri dari 10-15 digit
    }
    
    private void start() {
        // Menambahkan listener untuk tombol-tombol yang ada
        buttonTambah.addActionListener(new tambahKontakListener());
        buttonUbah.addActionListener(new ubahKontakListener());
        buttonHapus.addActionListener(new hapusKontakListener());
        buttonCari.addActionListener(new cariKontakListener());
        buttonEkspor.addActionListener(new eksporKontakListener());
        buttonImpor.addActionListener(new imporKontakListener());

        // Menambahkan listener untuk comboBox kategori
        comboBoxKategori.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    String kategoriTerpilih = (String) comboBoxKategori.getSelectedItem();
                    String deskripsi = "";

                    // Menentukan deskripsi berdasarkan kategori yang dipilih
                    switch (kategoriTerpilih) {
                        case "Keluarga":
                            deskripsi = "Kontak yang merupakan anggota keluarga.";
                            break;
                        case "Teman":
                            deskripsi = "Kontak yang merupakan teman pribadi.";
                            break;
                        case "Kerja":
                            deskripsi = "Kontak yang merupakan rekan kerja.";
                            break;
                        case "Lainnya":
                            deskripsi = "Kontak yang tidak termasuk dalam kategori di atas.";
                            break;
                    }
                    System.out.println(deskripsi); // Menampilkan deskripsi kategori
                }
            }
        });

        // Listener untuk menangani pemilihan baris di tabel
        tableKontak.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                DefaultTableModel tableModel = (DefaultTableModel) tableKontak.getModel();
                int barisAktif = tableKontak.getSelectedRow(); // Mengambil baris yang dipilih
                if (barisAktif >= 0) {
                    // Mengisi field dengan data kontak yang dipilih
                    textFieldNama.setText(tableModel.getValueAt(barisAktif, 1).toString());
                    textFieldNomor.setText(tableModel.getValueAt(barisAktif, 2).toString());
                    comboBoxKategori.setSelectedItem(tableModel.getValueAt(barisAktif, 3).toString());
                }
            }
        });

        muatKontak(); // Memuat data kontak saat aplikasi dimulai
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        Database.createDatabase(); // Membuat database jika belum ada
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton buttonCari;
    private javax.swing.JButton buttonEkspor;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonImpor;
    private javax.swing.JButton buttonTambah;
    private javax.swing.JButton buttonUbah;
    private javax.swing.JComboBox<String> comboBoxKategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableKontak;
    private javax.swing.JTextField textFieldCari;
    private javax.swing.JTextField textFieldNama;
    private javax.swing.JTextField textFieldNomor;
    // End of variables declaration//GEN-END:variables
}
